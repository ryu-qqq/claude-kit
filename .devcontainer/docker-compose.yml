version: '3.8'

services:
  # Main development container (lightweight)
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - JAVA_VERSION=21
        - TERRAFORM_VERSION=1.7.5
        - GRADLE_VERSION=8.5
    container_name: claude-dev-env
    hostname: claude-dev
    volumes:
      - ../:/workspace:cached
      - ~/.ssh:/home/developer/.ssh:ro
      - ~/.aws:/home/developer/.aws:ro
      - gradle-cache:/home/developer/.gradle
      - terraform-cache:/home/developer/.terraform.d
      - maven-cache:/home/developer/.m2
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=devdb
      - MYSQL_USER=devuser
      - MYSQL_PASSWORD=devpass
      - MYSQL_ROOT_PASSWORD=rootpass
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ORG_ID=${OPENAI_ORG_ID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_PROFILE=dev-readonly
      - AWS_REGION=ap-northeast-2
      - AWS_ENDPOINT_URL=http://localstack:4566
      - LOCALSTACK_HOST=localstack
      - TZ=Asia/Seoul
      - JAVA_HOME=/opt/java/openjdk
      - GRADLE_HOME=/opt/gradle
      - SPRING_PROFILES_ACTIVE=dev
    cap_add:
      - NET_ADMIN
      - NET_RAW
    depends_on:
      mysql:
        condition: service_healthy
      localstack:
        condition: service_healthy
    networks:
      - dev-network
    ports:
      - "8080:8080"  # Spring Boot
      - "3000:3000"  # Frontend dev server
      - "5001:5000"  # Additional services
    command: sleep infinity

  # MySQL 8.4 Server (separate container)
  mysql:
    image: mysql:8.0
    container_name: claude-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=devdb
      - MYSQL_USER=devuser
      - MYSQL_PASSWORD=devpass
      - MYSQL_ROOT_HOST=%
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 15s
      timeout: 10s
      retries: 8
      start_period: 60s
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --innodb-buffer-pool-size=128M

  # LocalStack for AWS local testing
  localstack:
    image: localstack/localstack:3.0
    container_name: claude-localstack
    ports:
      - "4566:4566"  # LocalStack gateway
      - "4510-4559:4510-4559"  # External service ports
    environment:
      - SERVICES=s3,dynamodb,lambda,sqs,sns,ses,secretsmanager,ssm,cloudformation,iam,sts,logs
      - DEBUG=0
      - DATA_DIR=/var/lib/localstack
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PERSISTENCE=1
      - AWS_DEFAULT_REGION=ap-northeast-2
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./scripts:/etc/localstack/init/ready.d
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: claude-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dev-network
    profiles:
      - cache
    command: redis-server --appendonly yes

volumes:
  mysql-data:
    driver: local
  gradle-cache:
    driver: local
  terraform-cache:
    driver: local
  maven-cache:
    driver: local
  localstack-data:
    driver: local
  redis-data:
    driver: local

networks:
  dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16